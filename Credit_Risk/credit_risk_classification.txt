[32m--------------------------------------------------------------------------------[37m
[34m1 - Preparation
[33m1.1 - Read CSV file, create DF and show head
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
Name:  df_lending
[32m--------------------------------------------------------------------------------[37m
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 77536 entries, 0 to 77535
Data columns (total 8 columns):
 #   Column            Non-Null Count  Dtype  
---  ------            --------------  -----  
 0   loan_size         77536 non-null  float64
 1   interest_rate     77536 non-null  float64
 2   borrower_income   77536 non-null  int64  
 3   debt_to_income    77536 non-null  float64
 4   num_of_accounts   77536 non-null  int64  
 5   derogatory_marks  77536 non-null  int64  
 6   total_debt        77536 non-null  int64  
 7   loan_status       77536 non-null  int64  
dtypes: float64(3), int64(5)
memory usage: 4.7 MB
None
[32m--------------------------------------------------------------------------------[37m
Row Count :[31m
loan_size           77536
interest_rate       77536
borrower_income     77536
debt_to_income      77536
num_of_accounts     77536
derogatory_marks    77536
total_debt          77536
loan_status         77536
dtype: int64 [37m
[32m--------------------------------------------------------------------------------[37m
   loan_size  interest_rate  ...  total_debt  loan_status
0    10700.0          7.672  ...       22800            0
1     8400.0          6.692  ...       13600            0
2     9000.0          6.963  ...       16100            0
3    10700.0          7.664  ...       22700            0
4    10800.0          7.698  ...       23000            0

[5 rows x 8 columns]
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m1 - Preparation
[33m1.2 - Create labels X and y
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
Name:  y
[32m--------------------------------------------------------------------------------[37m
<class 'pandas.core.series.Series'>
RangeIndex: 77536 entries, 0 to 77535
Series name: loan_status
Non-Null Count  Dtype
--------------  -----
77536 non-null  int64
dtypes: int64(1)
memory usage: 605.9 KB
None
[32m--------------------------------------------------------------------------------[37m
Row Count :[31m
77536 [37m
[32m--------------------------------------------------------------------------------[37m
0    0
1    0
2    0
3    0
4    0
Name: loan_status, dtype: int64
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
Name:  X
[32m--------------------------------------------------------------------------------[37m
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 77536 entries, 0 to 77535
Data columns (total 7 columns):
 #   Column            Non-Null Count  Dtype  
---  ------            --------------  -----  
 0   loan_size         77536 non-null  float64
 1   interest_rate     77536 non-null  float64
 2   borrower_income   77536 non-null  int64  
 3   debt_to_income    77536 non-null  float64
 4   num_of_accounts   77536 non-null  int64  
 5   derogatory_marks  77536 non-null  int64  
 6   total_debt        77536 non-null  int64  
dtypes: float64(3), int64(4)
memory usage: 4.1 MB
None
[32m--------------------------------------------------------------------------------[37m
Row Count :[31m
loan_size           77536
interest_rate       77536
borrower_income     77536
debt_to_income      77536
num_of_accounts     77536
derogatory_marks    77536
total_debt          77536
dtype: int64 [37m
[32m--------------------------------------------------------------------------------[37m
   loan_size  interest_rate  ...  derogatory_marks  total_debt
0    10700.0          7.672  ...                 1       22800
1     8400.0          6.692  ...                 0       13600
2     9000.0          6.963  ...                 0       16100
3    10700.0          7.664  ...                 1       22700
4    10800.0          7.698  ...                 1       23000

[5 rows x 7 columns]
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m1 - Preparation
[33m1.3 - Check Balance of y
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
total count: [31m 77536 [37m
Count by  0: [31m 75036 [37m
Count by  1: [31m 2500 [37m
Check      : [31m 77536
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m1 - Preparation 
[33m1.4 - Train Test Split
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
X_train Count          : [31m 58152 [37m
y_train Count          : [31m 58152 [37m
X_test  Count          : [31m 19384 [37m
y_test  Count          : [31m 19384 [37m
X_train + X_test Count : [31m 77536 [37m
y_train + y_test Count : [31m 77536 [37m
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m2 - Logistic Regression
[33m2.1 - Create the Logistic Regression Model
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m2 - Logistic Regression
[33m2.2 - Make Predictions using the Testing Data
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
Name:  df_test_predictions
[32m--------------------------------------------------------------------------------[37m
<class 'pandas.core.frame.DataFrame'>
Index: 19384 entries, 60914 to 2793
Data columns (total 2 columns):
 #   Column       Non-Null Count  Dtype
---  ------       --------------  -----
 0   Predictions  19384 non-null  int64
 1   Actual       19384 non-null  int64
dtypes: int64(2)
memory usage: 454.3 KB
None
[32m--------------------------------------------------------------------------------[37m
Row Count :[31m
Predictions    19384
Actual         19384
dtype: int64 [37m
[32m--------------------------------------------------------------------------------[37m
       Predictions  Actual
60914            0       0
36843            0       0
1966             0       0
70137            0       0
27237            0       0
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m2 - Logistic Regression
[33m2.3 Calculate, Generate, Print metrics for the model
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[37mBalanced Accuracy Score : [31m0.9520479254722232
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
cf test matrix : [31m
[[18663   102]
 [   56   563]]
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[31m Classification Report [37m
              precision    recall  f1-score   support

           0       1.00      0.99      1.00     18765
           1       0.85      0.91      0.88       619

    accuracy                           0.99     19384
   macro avg       0.92      0.95      0.94     19384
weighted avg       0.99      0.99      0.99     19384

[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m2 - Logistic Regression
[33m2.4 - Qualify the Model
[32m--------------------------------------------------------------------------------[37m
The logistic regression model was[31m 95% [37maccurate at predicting the healthy vs high-risk loan labels
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m3 - Logistic Regression Model with Resampled Training Data
[33m3.1 - Resample the training data with the RandomOversampler
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
Name:  X_ros_model
[32m--------------------------------------------------------------------------------[37m
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 150072 entries, 0 to 150071
Data columns (total 7 columns):
 #   Column            Non-Null Count   Dtype  
---  ------            --------------   -----  
 0   loan_size         150072 non-null  float64
 1   interest_rate     150072 non-null  float64
 2   borrower_income   150072 non-null  int64  
 3   debt_to_income    150072 non-null  float64
 4   num_of_accounts   150072 non-null  int64  
 5   derogatory_marks  150072 non-null  int64  
 6   total_debt        150072 non-null  int64  
dtypes: float64(3), int64(4)
memory usage: 8.0 MB
None
[32m--------------------------------------------------------------------------------[37m
Row Count :[31m
loan_size           150072
interest_rate       150072
borrower_income     150072
debt_to_income      150072
num_of_accounts     150072
derogatory_marks    150072
total_debt          150072
dtype: int64 [37m
[32m--------------------------------------------------------------------------------[37m
   loan_size  interest_rate  ...  derogatory_marks  total_debt
0    10700.0          7.672  ...                 1       22800
1     8400.0          6.692  ...                 0       13600
2     9000.0          6.963  ...                 0       16100
3    10700.0          7.664  ...                 1       22700
4    10800.0          7.698  ...                 1       23000

[5 rows x 7 columns]
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
Name:  y_ros_model
[32m--------------------------------------------------------------------------------[37m
<class 'pandas.core.series.Series'>
RangeIndex: 150072 entries, 0 to 150071
Series name: loan_status
Non-Null Count   Dtype
--------------   -----
150072 non-null  int64
dtypes: int64(1)
memory usage: 1.1 MB
None
[32m--------------------------------------------------------------------------------[37m
Row Count :[31m
150072 [37m
[32m--------------------------------------------------------------------------------[37m
0    0
1    0
2    0
3    0
4    0
Name: loan_status, dtype: int64
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
X_ros_model  Counter({'loan_size': 1, 'interest_rate': 1, 'borrower_income': 1, 'debt_to_income': 1, 'num_of_accounts': 1, 'derogatory_marks': 1, 'total_debt': 1})
y_ros_model  Counter({0: 75036, 1: 75036})
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m3 - Logistic Regression Model with Resampled Training Data
[33m3.2 - Train a Logistic Regression Model using the resampled data
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
Name:  df_predictions
[32m--------------------------------------------------------------------------------[37m
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 150072 entries, 0 to 150071
Data columns (total 2 columns):
 #   Column       Non-Null Count   Dtype
---  ------       --------------   -----
 0   Predictions  150072 non-null  int64
 1   Actual       150072 non-null  int64
dtypes: int64(2)
memory usage: 2.3 MB
None
[32m--------------------------------------------------------------------------------[37m
Row Count :[31m
Predictions    150072
Actual         150072
dtype: int64 [37m
[32m--------------------------------------------------------------------------------[37m
   Predictions  Actual
0            0       0
1            0       0
2            0       0
3            0       0
4            0       0
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m3 - Logistic Regression Model with Resampled Training Data
[33m3.3 - Calculate, Generate, Print metrics for the model
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[37mBalanced Accuracy Score : [31m0.9945026387334079
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
CF Matrix : [31m
[[74614   422]
 [  403 74633]]
[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[31m Classification Report [37m
              precision    recall  f1-score   support

           0       0.99      0.99      0.99     75036
           1       0.99      0.99      0.99     75036

    accuracy                           0.99    150072
   macro avg       0.99      0.99      0.99    150072
weighted avg       0.99      0.99      0.99    150072

[32m--------------------------------------------------------------------------------[37m
[32m--------------------------------------------------------------------------------[37m
[34m3 - Logistic Regression Model with Resampled Training Data
[33m3.4 - Qualify the Model 
[32m--------------------------------------------------------------------------------[37m
The logistic regression model predicts the oversampled data with near-perfect accuracy (>99% accurate)
[32m--------------------------------------------------------------------------------[37m
