[32m
________________________________________________________________________________ [37m
[34m 1 - Preparation
[33m 
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 1 - Preparation
[33m 1.1 - Read CSV file, create DF and show head
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
Row Count : [31m 77536 [37m

   loan_size  interest_rate  ...  total_debt  loan_status
0    10700.0          7.672  ...       22800            0
1     8400.0          6.692  ...       13600            0
2     9000.0          6.963  ...       16100            0
3    10700.0          7.664  ...       22700            0
4    10800.0          7.698  ...       23000            0

[5 rows x 8 columns]
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 1 - Preparation
[33m 1.2 - Create labels X and y
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
Values fot Y :
[37m
0    0
1    0
2    0
3    0
4    0
Name: loan_status, dtype: int64
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
Values of X :
[37m
   loan_size  interest_rate  ...  derogatory_marks  total_debt
0    10700.0          7.672  ...                 1       22800
1     8400.0          6.692  ...                 0       13600
2     9000.0          6.963  ...                 0       16100
3    10700.0          7.664  ...                 1       22700
4    10800.0          7.698  ...                 1       23000

[5 rows x 7 columns]
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 1 - Preparation
[33m 1.3 - Check Balance of y
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
total count: [31m 77536 [37m
Count by  0: [31m 75036 [37m
Count by  1: [31m 2500 [37m
Check      : [31m 77536
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 1 - Preparation 
[33m 1.4 - Train Test Split
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
X_train Count          : [31m 58152 [37m
y_train Count          : [31m 58152 [37m
X_test  Count          : [31m 19384 [37m
y_test  Count          : [31m 19384 [37m
X_train + X_test Count : [31m 77536 [37m
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 2 - Logistic Regression
[33m 
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 2 - Logistic Regression
[33m 2.1 - Create the Logistic Regression Model
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 2 - Logistic Regression
[33m 2.2 - Make Predictions using the Testing Data
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
       Predictions  Actual
60914            0       0
36843            0       0
1966             0       0
70137            0       0
27237            0       0
...            ...     ...
45639            0       0
11301            0       0
51614            0       0
4598             0       0
2793             0       0

[19384 rows x 2 columns]
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 2 - Logistic Regression
[33m 2.3 Calculate, Generate, Print metrics for the model
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
The balanced accuracy score of the model is: 0.9520479254722232
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
cf test matrix : [31m
[[18663   102]
 [   56   563]]
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[31m Classification Report [37m
              precision    recall  f1-score   support

           0       1.00      0.99      1.00     18765
           1       0.85      0.91      0.88       619

    accuracy                           0.99     19384
   macro avg       0.92      0.95      0.94     19384
weighted avg       0.99      0.99      0.99     19384

[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 2 - Logistic Regression
[33m 2.4 - Qualify the Model
[32m
________________________________________________________________________________ [37m
The logistic regression model was 95% accurate at predicting the healthy vs high-risk loan labels
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 3 - Logistic Regression Model with Resampled Training Data
[33m 
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 3 - Logistic Regression Model with Resampled Training Data
[33m 3.1 - Resample the training data with the RandomOversampler
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
X_ros_model  Counter({'loan_size': 1, 'interest_rate': 1, 'borrower_income': 1, 'debt_to_income': 1, 'num_of_accounts': 1, 'derogatory_marks': 1, 'total_debt': 1})
y_ros_model  Counter({0: 75036, 1: 75036})
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 3 - Logistic Regression Model with Resampled Training Data
[33m 3.2 - Train a Logistic Regression Model using the resampled data
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
        Predictions  Actual
0                 0       0
1                 0       0
2                 0       0
3                 0       0
4                 0       0
...             ...     ...
150067            1       1
150068            1       1
150069            1       1
150070            1       1
150071            1       1

[150072 rows x 2 columns]
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 3 - Logistic Regression Model with Resampled Training Data
[33m 3.3 - Calculate, Generate, Print metrics for the model
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
The balanced accuracy score of the model is: 0.9945026387334079
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
CF Matrix : [31m
[[74614   422]
 [  403 74633]]
[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[31m Classification Report [37m
              precision    recall  f1-score   support

           0       0.99      0.99      0.99     75036
           1       0.99      0.99      0.99     75036

    accuracy                           0.99    150072
   macro avg       0.99      0.99      0.99    150072
weighted avg       0.99      0.99      0.99    150072

[32m
________________________________________________________________________________ [37m
[32m
________________________________________________________________________________ [37m
[34m 3 - Logistic Regression Model with Resampled Training Data
[33m 3.4 - Qualify the Model 
[32m
________________________________________________________________________________ [37m
The logistic regression model predicts the oversampled data with near-perfect accuracy (>99% accurate)
[32m
________________________________________________________________________________ [37m
